<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>xin.jiangqiang</groupId>
    <artifactId>J-blog</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>J-blog-util</module>
        <module>J-blog-generator</module>
        <module>J-blog-system</module>
    </modules>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.9.RELEASE</version>
        <relativePath/>
    </parent>

    <!--依赖版本管理-->
    <properties>
        <flexmark.version>0.50.42</flexmark.version>
        <spring-cloud.version>Hoxton.SR5</spring-cloud.version>
        <cloud-alibaba.version>2.2.0.RELEASE</cloud-alibaba.version>
        <mybatis-plus.version>3.3.1</mybatis-plus.version>
        <druid.version>1.1.21</druid.version>
        <kaptcha.version>2.3.2</kaptcha.version>
        <fastjson.version>1.2.8</fastjson.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <commons-io.version>2.6</commons-io.version>
        <httpclientutil.version>1.0.4</httpclientutil.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-security-crypto.version>5.3.2.RELEASE</spring-security-crypto.version>
        <java.version>8</java.version>
<!--        <skipTests>true</skipTests>-->
    </properties>


    <!--依赖声明-->
    <dependencyManagement>
        <dependencies>
            <!-- spring cloud -->
<!--            <dependency>-->
<!--                <groupId>org.springframework.cloud</groupId>-->
<!--                <artifactId>spring-cloud-dependencies</artifactId>-->
<!--                <version>${spring-cloud.version}</version>-->
<!--                <type>pom</type>-->
<!--                &lt;!&ndash;maven不支持多继承，使用 import 来依赖管理配置&ndash;&gt;-->
<!--                <scope>import</scope>-->
<!--            </dependency>-->

            <!-- alibaba 依赖-->
<!--            <dependency>-->
<!--                <groupId>com.alibaba.cloud</groupId>-->
<!--                <artifactId>spring-cloud-alibaba-dependencies</artifactId>-->
<!--                <version>${cloud-alibaba.version}</version>-->
<!--                <type>pom</type>-->
<!--                <scope>import</scope>-->
<!--            </dependency>-->

            <!--mybatis-plus启动器-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!--druid连接池-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- Swagger -->
            <dependency>
                <groupId>com.spring4all</groupId>
                <artifactId>swagger-spring-boot-starter</artifactId>
                <version>1.9.1.RELEASE</version>
            </dependency>

            <!-- kaptcha 用于图形验证码 -->
            <dependency>
                <groupId>com.github.penggle</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>

            <!-- aliyun oss -->
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>3.8.0</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!--http请求工具-->
            <dependency>
                <groupId>com.arronlong</groupId>
                <artifactId>httpclientutil</artifactId>
                <version>${httpclientutil.version}</version>
            </dependency>

            <!-- 工具类依赖 -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vladsch.flexmark</groupId>
                <artifactId>flexmark-all</artifactId>
                <version>${flexmark.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.vladsch.flexmark</groupId>
                        <artifactId>flexmark-pdf-converter</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.vladsch.flexmark</groupId>
                        <artifactId>flexmark-youtrack-converter</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.vladsch.flexmark</groupId>
                        <artifactId>flexmark-jira-converter</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--Spring Seucrity 加密模块-->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-crypto</artifactId>
                <version>${spring-security-crypto.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
<!--            &lt;!&ndash;springboot 打包插件&ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--            </plugin>-->
        </plugins>
        <resources>
            <resource>
                <!--编译时，默认情况下不会将    mapper.xml文件编译进去，
                src/main/java 资源文件的路径，
                **/*.xml 需要编译打包的文件类型是xml文件，
                -->
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
    </build>
</project>